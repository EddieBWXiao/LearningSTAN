dPtpRT[dPtpRT$BinnedTrials=="1~10" & dPtpRT$condition=="postShift",],
paired=T)
dPtpRT<-goodRT %>%
group_by(Subject,BinnedTrials,condition,phase) %>%
summarise(RT = mean(rt,na.rm=T))
t.test(dPtpRT[dPtpRT$BinnedTrials=="41~48" & dPtpRT$condition=="preShift",],
dPtpRT[dPtpRT$BinnedTrials=="1~10" & dPtpRT$condition=="postShift",],
paired=T)
nrow(dPtpRT[dPtpRT$BinnedTrials=="41~48" & dPtpRT$condition=="preShift",])
nrow(dPtpRT[dPtpRT$BinnedTrials=="1~10" & dPtpRT$condition=="postShift",])
dPtpRT<-goodRT %>%
group_by(Subject,BinnedTrials,condition,phase) %>%
summarise(RT = mean(rt,na.rm=T))
t.test(dPtpRT[dPtpRT$BinnedTrials=="41~48" & dPtpRT$condition=="preShift",],
dPtpRT[dPtpRT$BinnedTrials=="31~40" & dPtpRT$condition=="preShift",],
paired=T)
nrow(dPtpRT[dPtpRT$BinnedTrials=="31~40" & dPtpRT$condition=="preShift",])
dPtpRT<-goodRT %>%
group_by(Subject,BinnedTrials,condition,phase) %>%
summarise(RT = mean(rt,na.rm=T))
t.test(dPtpRT[dPtpRT$BinnedTrials=="1~10" & dPtpRT$condition=="postShift",],
dPtpRT[dPtpRT$BinnedTrials=="31~40" & dPtpRT$condition=="preShift",],
paired=T)
table(data$response)
View(data)
goodRT<-data[data$rt>100 & !is.na(data$response),]
goodRT[goodRT$condition=="preShift",] %>% group_by(Subject,BinnedTrials,phase) %>%
summarise(averagePtpRT = mean(rt,na.rm=T)) %>%
group_by(BinnedTrials,phase) %>%
summarise(averageRT = mean(averagePtpRT,na.rm=T),std = sd(averagePtpRT)) %>%
ggplot(aes(BinnedTrials,averageRT,group=phase,color=phase)) +
geom_point()+geom_line()+geom_errorbar(aes(ymin=averageRT-std, ymax=averageRT+std), width=0.1)
goodRT[goodRT$condition=="postShift",] %>% group_by(Subject,BinnedTrials,phase) %>%
summarise(averagePtpRT = mean(rt,na.rm=T)) %>%
group_by(BinnedTrials,phase) %>%
summarise(averageRT = mean(averagePtpRT,na.rm=T),std = sd(averagePtpRT)) %>%
ggplot(aes(BinnedTrials,averageRT,group=phase,color=phase)) +
geom_point()+geom_line()+geom_errorbar(aes(ymin=averageRT-std, ymax=averageRT+std), width=0.1)
install.packages("hBayesDM")
dataPath = system.file("extdata/gng_exampleData.txt", package="hBayesDM")
output1 = gng_m1(data="example", niter=2000, nwarmup=1000, nchain=3, ncore=3)
library(hBayesDM)
output1 = gng_m1(data="example", niter=2000, nwarmup=1000, nchain=3, ncore=3)
aaa<-list(a1=c(1,3,4),a2=c(1,4))
aaa
aaa<-list(a1=c(1,3,4),a2=c(1,4),c1=4)
aaa
task$rewardA<-c(1,1,1)
task<-list(rewardA=c(1,1,1),rewardB=c(1,0,1))
task
array(task$rewardA,task$rewardB,dim=c(length(task$rewardA),2))
array(task$rewardA,task$rewardB)
task$rewardA
class(task$rewardA)
array(task$rewardA,task$rewardB,c(3,2))
array(c(1,1,1),c(1,2,4),c(3,2))
array(c(1,1,1),c(1,2,4))
array(task$rewardA,task$rewardB)
task
task<-as.data.fram(task)
task<-as.data.frame(task)
array(task$rewardA,task$rewardB)
array(task$rewardA[,],task$rewardB[,])
array(task$rewardA,task$rewardB)
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
#test1_demo; run RW1lr1beta2AFC
task<-list(reward1=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
reward2=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
out<-RW1lr1beta2AFC(parameters,task)
rep(NA,10)
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
#test1_demo; run RW1lr1beta2AFC
task<-data.frame(reward1=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
reward2=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
out<-RW1lr1beta2AFC(parameters,task)
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
rbinom(n=1,size=1,prob=0.90)
rbinom(n=1,size=1,prob=0.90)
rbinom(n=1,size=1,prob=0.90)
rbinom(n=1,size=1,prob=0.90)
rbinom(n=1,size=1,prob=0.90)
rbinom(n=1,size=1,prob=0.90)
rbinom(n=1,size=1,prob=0.90)
rbinom(n=1,size=1,prob=0.90)
rbinom(n=1,size=1,prob=0.90)
rbinom(n=1,size=1,prob=0.90)
rbinom(n=1,size=1,prob=0.90)
rbinom(n=1,size=1,prob=0.90)
rbinom(n=1,size=1,prob=1)
rbinom(n=1,size=1,prob=1)
rbinom(n=1,size=1,prob=1)
rbinom(n=1,size=1,prob=1)
rbinom(n=1,size=1,prob=1)
rbinom(n=1,size=1,prob=1)
?rbinom
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
#test1_demo; run RW1lr1beta2AFC
task<-data.frame(reward1=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
reward2=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
out<-RW1lr1beta2AFC(parameters,task)
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_demo_RW.R")
#test1_demo; run RW1lr1beta2AFC
task<-data.frame(reward1=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
reward2=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
out<-RW1lr1beta2AFC(parameters,task)
1/(1+exp(-10*0))
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
#test1_demo; run RW1lr1beta2AFC
task<-data.frame(reward1=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
reward2=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
out<-RW1lr1beta2AFC(parameters,task)
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
RW1lr1beta2AFC<-function(parameters,task){
ntrials<-nrow(task)
choices<-rep(NA,ntrials)
Q1<-rep(NA,ntrials)
Q2<-rep(NA,ntrials)
Q1[1]<-0.5
Q2[1]<-0.5
pchoice<-rep(NA,ntrials)
alpha<-parameters$alpha
beta<-parameters$beta
#list2env(parameters,environment()) #okay this is nuclear... is it?
for(t in 1:ntrials){
Qdiff<-Q1[t]-Q2[t]
pchoice[t]<-1/(1+exp(-beta*Qdiff))
print(pchoice[t])
choices<-rbinom(n=1,size=1,prob=pchoice[t])
if(t<ntrials){
if(choices[t]==1){
Q1[t+1]<-Q1[t]+alpha*(task$reward1[t]-Q1[t])
Q2[t+1]<-Q2[t]
}else if(choices[t]==2){
Q2[t+1]<-Q2[t]+alpha*(task$reward2[t]-Q2[t])
Q1[t+1]<-Q1[t]
}
}
}
loglik<-NA
Q<-data.frame(Q1,Q2)
ptp<-list(loglik=loglik,pchoice=pchoice,Q=Q,choices=choices)
return(ptp)
}
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
out
#test1_demo; run RW1lr1beta2AFC
task<-data.frame(reward1=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
reward2=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
out<-RW1lr1beta2AFC(parameters,task)
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
#test1_demo; run RW1lr1beta2AFC
task<-data.frame(reward1=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
reward2=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
out<-RW1lr1beta2AFC(parameters,task)
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
#test1_demo; run RW1lr1beta2AFC
task<-data.frame(reward1=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
reward2=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
out<-RW1lr1beta2AFC(parameters,task)
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
#test1_demo; run RW1lr1beta2AFC
task<-data.frame(reward1=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
reward2=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
out<-RW1lr1beta2AFC(parameters,task)
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
#test1_demo; run RW1lr1beta2AFC
task<-data.frame(reward1=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
reward2=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
out<-RW1lr1beta2AFC(parameters,task)
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
#test1_demo; run RW1lr1beta2AFC
task<-data.frame(reward1=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
reward2=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
out<-RW1lr1beta2AFC(parameters,task)
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
#test1_demo; run RW1lr1beta2AFC
task<-data.frame(reward1=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
reward2=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
out<-RW1lr1beta2AFC(parameters,task)
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
out
out$choices
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1beta_sim.R")
source("~/Documents/GitHub/LearningSTAN/test1_demo_RW.R")
source("~/Documents/GitHub/LearningSTAN/test1_demo_RW.R")
source("~/Documents/GitHub/LearningSTAN/test1_RW1lr1beta2AFC.R")
source("~/Documents/GitHub/LearningSTAN/test1_demo_RW.R")
source("~/Documents/GitHub/LearningSTAN/test1_demo_RW.R")
#test1_demo; run RW1lr1beta2AFC
CurrentSourceWD<-dirname(rstudioapi::getSourceEditorContext()$path)
setwd(CurrentSourceWD)
source("test1_RW1lr1beta2AFC.R")
task<-data.frame(rewardRef=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
rewardAlt=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
out<-RW1lr1beta2AFC(parameters,task)
out
params<-c(1,3)
class(params)
is.vector(params)
params<-list(alpha=5,beta=10)
is.vector(params)
params
is.list(params)
is.list(c(1,2))
params<-list(alpha=c(5,4,5),beta=c(10,1,1,))
params<-list(alpha=c(5,4,5),beta=c(10,1,1))
params[1]
params[[1]]
params[1][1]
names(params)
dim(parmas)
dim(params)
dim(task$rewardRef)
dim(task$rewardRef)p1
dim(task$rewardRef)[1]
dim(task)
dim(task)[1]
dim(task$outcome)[1]
is.list(task)
is.data.frame(params)
outcome=array(c(5,5,5,5,1,1,1,1),dim=c(4,2))
outcome
outcome[outcome==1]=0
outcome
is.array(outcome)
names(task)
names(params)
"choice" %in% names(task)
"alpha" %in% names(params)
params$alpha
params$alpha[1,1]
params$alpha[1,]
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
rm(list=ls())
#test1_demo; run RW1lr1beta2AFC
CurrentSourceWD<-dirname(rstudioapi::getSourceEditorContext()$path)
setwd(CurrentSourceWD)
source("test1_RW1lr1beta2AFC.R")
source("")
#test1_demo; run RW1lr1beta2AFC
CurrentSourceWD<-dirname(rstudioapi::getSourceEditorContext()$path)
setwd(CurrentSourceWD)
source("test1_RW1lr1beta2AFC.R")
source("RW1lr1beta_2arm.R")
task<-data.frame(rewardRef=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
rewardAlt=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
rng(1202)
?seed
??seed
#test1_demo; run RW1lr1beta2AFC
CurrentSourceWD<-dirname(rstudioapi::getSourceEditorContext()$path)
setwd(CurrentSourceWD)
source("test1_RW1lr1beta2AFC.R")
source("RW1lr1beta_2arm.R")
task<-data.frame(rewardRef=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
rewardAlt=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
set.seed(1202)
out<-RW1lr1beta2AFC(parameters,task)
out
rm(list=ls())
#test1_demo; run RW1lr1beta2AFC
CurrentSourceWD<-dirname(rstudioapi::getSourceEditorContext()$path)
setwd(CurrentSourceWD)
source("test1_RW1lr1beta2AFC.R")
source("RW1lr1beta_2arm.R")
task<-data.frame(rewardRef=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
rewardAlt=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
set.seed(1202)
out1<-RW1lr1beta2AFC(parameters,task)
set.seed(1202)
out2<-RW1lr1beta_2arm(parameters,task)
#test1_demo; run RW1lr1beta2AFC
CurrentSourceWD<-dirname(rstudioapi::getSourceEditorContext()$path)
setwd(CurrentSourceWD)
source("test1_RW1lr1beta2AFC.R")
source("RW1lr1beta_2arm.R")
task<-data.frame(rewardRef=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
rewardAlt=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
set.seed(1202)
out1<-RW1lr1beta2AFC(parameters,task)
set.seed(1202)
task<-list(outcome=data.frame(c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0)))
parameters<-list(alpha=1,beta=10)
out2<-RW1lr1beta_2arm(parameters,task)
out2
out2$pchoice
out1$pchoice
#test1_demo; run RW1lr1beta2AFC
CurrentSourceWD<-dirname(rstudioapi::getSourceEditorContext()$path)
setwd(CurrentSourceWD)
source("test1_RW1lr1beta2AFC.R")
source("RW1lr1beta_2arm.R")
task1<-data.frame(rewardRef=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
rewardAlt=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
set.seed(1202)
out1<-RW1lr1beta2AFC(parameters,task1)
set.seed(1202)
task2<-list(outcome=data.frame(c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0)))
parameters<-list(alpha=1,beta=10)
out2<-RW1lr1beta_2arm(parameters,task)
out1
task1
task2
#test1_demo; run RW1lr1beta2AFC
CurrentSourceWD<-dirname(rstudioapi::getSourceEditorContext()$path)
setwd(CurrentSourceWD)
source("test1_RW1lr1beta2AFC.R")
source("RW1lr1beta_2arm.R")
task1<-data.frame(rewardRef=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
rewardAlt=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
set.seed(1202)
out1<-RW1lr1beta2AFC(parameters,task1)
set.seed(1202)
task2<-list(outcome=data.frame(A=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
B=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0)))
parameters<-list(alpha=1,beta=10)
out2<-RW1lr1beta_2arm(parameters,task)
task2
task2[,]==task1[,]
task2$outcome[,]==task1[,]
out1$choices
rm(list=ls())
#test1_demo; run RW1lr1beta2AFC
CurrentSourceWD<-dirname(rstudioapi::getSourceEditorContext()$path)
setwd(CurrentSourceWD)
source("test1_RW1lr1beta2AFC.R")
source("RW1lr1beta_2arm.R")
task1<-data.frame(rewardRef=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
rewardAlt=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
set.seed(1202)
out1<-RW1lr1beta2AFC(parameters,task1)
set.seed(1202)
task2<-list(outcome=data.frame(A=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
B=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0)))
parameters<-list(alpha=1,beta=10)
out2<-RW1lr1beta_2arm(parameters,task)
#test1_demo; run RW1lr1beta2AFC
CurrentSourceWD<-dirname(rstudioapi::getSourceEditorContext()$path)
setwd(CurrentSourceWD)
source("test1_RW1lr1beta2AFC.R")
source("RW1lr1beta_2arm.R")
task1<-data.frame(rewardRef=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
rewardAlt=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0))
parameters<-list(alpha=1,beta=10)
set.seed(1202)
out1<-RW1lr1beta2AFC(parameters,task1)
set.seed(1202)
task2<-list(outcome=data.frame(A=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
B=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0)))
parameters<-list(alpha=1,beta=10)
out2<-RW1lr1beta_2arm(parameters,task2)
out1$choices
out2$choice
out2<-RW1lr1beta_2arm(parameters,task2)
out2
out1$choices
out2$choice
out2<-RW1lr1beta_2arm(parameters,task2)
out2$choice
out2<-RW1lr1beta_2arm(parameters,task2)
out2$choice
out1$Q
out2$value
out2$pchoice
out1$pchoice
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
s1<-sim_vis_RL2c1o(RW1lr1beta_2arm())
s1<-sim_vis_RL2c1o(RW1lr1beta_2arm
)
s1
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
sim<s1
sim<-s1
sim$value
sim$v_final
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
s1<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
s1<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/RW1lr1beta_2arm.R")
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/RW1lr1beta_2arm.R")
sim_vis_RL2c1o<-function(theModel){
#for any learning task with two options and one outcome
#wrriten by Eddie Xiao
#adapting https://github.com/EddieBWXiao/Study_ProbabilisticLearningAndDM/blob/main/simvis_RW.m
#(work in progress)
#theModel: the "function handle", e.g. RW1lr1beta_2arm, no () behind
task<-list(outcome=data.frame(ref=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
alt=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0)))
params<-list(alpha=0.001,beta=0.1)
sim<-theModel(params,task)
plot(sim$choice_prob[1],
type = "l", #draw the line
col = "blue", lwd = 2) #thick blue
plot(sim$value[,1])
return(sim)
}
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
source("~/Documents/GitHub/LearningSTAN/RW1lr1beta_2arm.R")
source("~/Documents/GitHub/LearningSTAN/sim_vis_RL2c1o.R")
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/RW1lr1beta_2arm.R")
source("~/Documents/GitHub/LearningSTAN/RW1lr1beta_2arm.R")
source("~/Documents/GitHub/LearningSTAN/RW1lr1beta_2arm.R")
sim_vis_RL2c1o<-function(theModel){
#for any learning task with two options and one outcome
#wrriten by Eddie Xiao
#adapting https://github.com/EddieBWXiao/Study_ProbabilisticLearningAndDM/blob/main/simvis_RW.m
#(work in progress)
#theModel: the "function handle", e.g. RW1lr1beta_2arm, no () behind
task<-list(outcome=data.frame(ref=c(1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1),
alt=c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0)))
params<-list(alpha=1,beta=0.1)
sim<-theModel(params,task)
plot(sim$choice_prob[1],
type = "l", #draw the line
col = "blue", lwd = 2) #thick blue
plot(sim$value[,1])
return(sim)
}
source("~/Documents/GitHub/LearningSTAN/RW1lr1beta_2arm.R")
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/RW1lr1beta_2arm.R")
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/RW1lr1beta_2arm.R")
sim<-sim_vis_RL2c1o(RW1lr1beta_2arm)
source("~/Documents/GitHub/LearningSTAN/RW1lr1beta_2arm.R")
alpha
params
